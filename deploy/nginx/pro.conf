server {
	listen 80;
	server_name _;

	# log_format catch_all_format '$remote_addr - $remote_user [$time_local] "$request" '
	# 							'$status $body_bytes_sent "$http_referer" '
	# 							'"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access_port_80.log combined;

	location = /favicon.ico {
		access_log off;
		log_not_found off;
	}

    location /static/ {
        root /home/x/apps/pro;  # Adjust to your static files location
    }


	location / {
		include proxy_params;
		proxy_pass http://unix:/run/gunicorn.sock;

    	# Pass additional headers to Gunicorn/Django 
    	proxy_set_header Host $host;
    	proxy_set_header X-Real-IP $remote_addr;
    	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	proxy_set_header X-Forwarded-Proto $scheme;
	}

}


server {
	listen 8000;
	server_name _;

	# log_format log_format '$remote_addr - $remote_user [$time_local] "$request" '
	# 							'$status $body_bytes_sent "$http_referer" '
	# 							'"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access_log_port_8000.log combined;


	location = /favicon.ico {
		access_log off;
		log_not_found off;
	}

    location /static/ {
        root /home/x/apps/pro;  # Adjust to your static files location
    }


	location / {
		include proxy_params;
		proxy_pass http://unix:/run/gunicorn.sock;

        # Pass additional headers to Gunicorn/Django 
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

}

server {
    listen 8001;
    server_name _;

    add_header Content-Type text/json;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location /server {
        root /home/x/apps/pro;  # Ensure this is set to the right directory
        include proxy_params;
        return 200 '{
            "nginx_version": "$nginx_version", 
            "remote_addr": "$remote_addr", 
            "remote_user": "$remote_user", 
            "http_version": "$server_protocol", 
            "geoip_city": "$geoip_city", 
            "args": "$args", 
            "uri": "$uri", 
            "request_body": "$request_body", 
            "document_root": "$document_root", 
            "hostname": "$hostname", 
            "server_name": "$server_name", 
            "server_port": "$server_port"
        }';
    }
}


server
{
		listen 8002;		#  The locations below only work if given a unique port to listen to.
		server_name _;
		add_header Content-Type text/html;

		location /hello {
			include proxy_params;
			return 200 '<html><body>Hello World<br>$document_root - $scheme://.$host.$request_uri /</body></html>';
		}
}


server
{
		listen 8003;		#  The locations below only work if given a unique port to listen to.
		server_name _;
		add_header Content-Type text/json;

		location /alive {
			include proxy_params;
			return 200 '{"alive": true, "alive_string": "true", "alive_python": "True" }';

		}
}
